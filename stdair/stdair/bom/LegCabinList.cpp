// //////////////////////////////////////////////////////////////////////
// Import section
// //////////////////////////////////////////////////////////////////////
// STL
#include <cassert>
// STDAIR
#include <stdair/bom/BomChildrenHolderImp.hpp>
#include <stdair/bom/LegCabin.hpp>
#include <stdair/bom/LegCabinList.hpp>

namespace stdair {

  // ////////////////////////////////////////////////////////////////////
  LegCabinList_T::
  LegCabinList_T (const LegCabinHolder_T& iLegCabinHolder)
    : _legCabinHolder (iLegCabinHolder) {
  }

  // ////////////////////////////////////////////////////////////////////
  LegCabinList_T::
  LegCabinList_T (const LegCabinList_T& iLCList)
    : _legCabinHolder (iLCList._legCabinHolder) {
  }

  // ////////////////////////////////////////////////////////////////////
  LegCabinList_T::~LegCabinList_T () {
  }

  // //////////////////////////////////////////////////////////////////////
  LegCabinList_T::iterator LegCabinList_T::begin () const {
    return _legCabinHolder.listBegin ();
  }

  // //////////////////////////////////////////////////////////////////////
  LegCabinList_T::iterator LegCabinList_T::end () const {
    return _legCabinHolder.listEnd ();
  }

  // //////////////////////////////////////////////////////////////////////
  LegCabinList_T::reverse_iterator LegCabinList_T::rbegin () const {
    return _legCabinHolder.listRBegin ();
  }

  // //////////////////////////////////////////////////////////////////////
  LegCabinList_T::reverse_iterator LegCabinList_T::rend () const {
    return _legCabinHolder.listREnd ();
  }

}

