/*!
\page howto_release Make a new release

\section description Introduction

This document describes briefly the recommended procedure of releasing
a new version of StdAir using a Linux development machine and the
GitHub project site.

The following steps are required to make a release of the distribution package.


\section initialisation Initialisation

Clone locally the full
<a href="http://github.com/airsim/stdair">Git project</a>:
\verbatim 
$ mkdir -p ~/dev/sim
$ cd ~/dev/sim
$ git clone git@github.com:airsim/stdair.git stdairgit # If SSH is allowed
$ git clone https://github.com/airsim/stdair.git stdairgit # If the firewall does not allow SSH
$ cd stdairgit
$ git checkout trunk
\endverbatim 


\section branch_creation Branch creation

Create the branch, on your local clone, corresponding to the new release
(say, 1.00.3):
\verbatim
cd ~/dev/sim/stdairgit
git checkout trunk
git checkout -b 1.00.3
\endverbatim
Update the version in the various build system files, replacing 99.99.99 by
the correct version number:
\verbatim
vi CMakeLists.txt
vi autogen.sh
\endverbatim

Update the version and add a change-log in the ChangeLog and in the 
RPM specification files:
\verbatim
vi ChangeLog
vi stdair.spec
\endverbatim

\section branch_publish Commit and publish the release branch

Commit the new release:
\verbatim
cd ~/dev/sim/stdairgit
git add -A
git commit -m "[Release 1.00.3] Release of version 1.00.3."
git push
\endverbatim

\section trunk_update Update the change-log in the trunk as well

Update the change-log in the ChangeLog and RPM specification files:
\verbatim
cd ~/dev/sim/stdairgit
git checkout trunk
vi ChangeLog
vi stdair.spec
\endverbatim

Commit the change-logs and publish the trunk (main development branch):
\verbatim
git commit -m "[Doc] Integrated the change-log of the release 1.00.3."
git push
\endverbatim

\section create_packages Create distribution packages

Create the distribution packages using the following command:<br>
\verbatim 
cd ~/dev/sim/stdairgit
git checkout 1.00.3
rm -rf build && mkdir -p build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/home/user/dev/deliveries/stdair-1.00.3 \
 -DCMAKE_BUILD_TYPE:STRING=Debug -DINSTALL_DOC:BOOL=ON ..
make check && make dist
\endverbatim 


This will configure, compile and check the package. The output packages
will be named, for instance, <tt>stdair-1.00.3.tar.gz</tt> and
<tt>stdair-1.00.3.tar.bz2</tt>.


\section generate_rpm_packages Generation the RPM packages

Optionally, generate the RPM package (for instance, for 
<a href="http://fedoraproject.org">Fedora</a>/<a href="http://www.redhat.com">RedHat</a>):
\verbatim 
cd ~/dev/sim/stdairgit
git checkout 1.00.3
rm -rf build && mkdir -p build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/home/user/dev/deliveries/stdair-99.99.99 \
 -DCMAKE_BUILD_TYPE:STRING=Debug -DINSTALL_DOC:BOOL=ON ..
make dist
\endverbatim 

To perform this step, rpm-build, rpmlint and rpmdevtools have to be available
on the system.
\verbatim 
cp stdair.spec ~/dev/packages/SPECS \
  && cp stdair-1.00.3.tar.bz2 ~/dev/packages/SOURCES
cd ~/dev/packages/SPECS
rpmbuild -ba stdair.spec
rpmlint -i ../SPECS/stdair.spec ../SRPMS/stdair-1.00.3-1.fc15.src.rpm \
  ../RPMS/noarch/stdair-* ../RPMS/i686/stdair-*
\endverbatim 


\section update_changelog Update distributed change log

Update the \c NEWS and \c ChangeLog files with appropriate
information, including what has changed since the previous release. Then
commit and push the changes into the 
<a href="http://github.com/airsim/stdair">StdAir's Git repository</a>.


\section create_bin_packages Create the binary package, including the documentation

Create the binary package, which includes HTML and PDF documentation,
using the following command:
\verbatim 
make package
\endverbatim 

The output binary package will be named, for instance,
<tt>stdair-1.00.3-Linux.tar.bz2</tt>. That package contains both the HTML
and PDF documentation. The binary package contains also the executables
and shared libraries, as well as C++ header files, but all of those do not
interest us for now.

\section upload_files Files on GitHub

GitHub allows to archive/generate <a
href="http://github.com/airsim/stdair/releases">packages (tar-balls)</a>
corresponding to Git tags.


\section upload_doc Upload the documentation to GitHub

In order to update the Web site files:
\verbatim
$ export STDAIR_VER=1.00.3
$ cd ~/dev/sim/stdairgit
$ git checkout $STDAIR_VER
$ cd build
$ export INSTALL_BASEDIR=~/dev/deliveries
$ if [ -d /usr/lib64 ]; then LIBSUFFIX=64; fi
$ export LIBSUFFIX_4_CMAKE="-DLIB_SUFFIX=$LIBSUFFIX"
$ rm -rf build && mkdir build && cd build
$ cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_BASEDIR}/stdair-$STDAIR_VER \
	-DCMAKE_BUILD_TYPE:STRING=Debug -DENABLE_TEST:BOOL=ON \
	-DINSTALL_DOC:BOOL=ON -DRUN_GCOV:BOOL=OFF ${LIBSUFFIX_4_CMAKE} ..
$ make check && make install
$ git checkout gh-pages
$ rsync -av --del $INSTALL_BASEDIR/share/doc/stdair/html/ ./
$ git checkout -- .gitignore README.md
$ git add .
$ git commit -m "[Doc] Updated the documentation for $STDAIR_VER"
$ git push
\endverbatim 

*/
